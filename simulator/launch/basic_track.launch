<?xml version="1.0" encoding ="UTF-8"?>
<launch>
    <arg name="mav_name" default="hummingbird"/>
    <arg name="enable_logging" default="false" />
    <arg name="enable_ground_truth" default="true"/>
    
    <include file="$(find simulator)/launch/world.launch" />

    <group ns="$(arg mav_name)">
        <include file="$(find rotors_gazebo)/launch/spawn_mav.launch">
          <arg name="mav_name" value="$(arg mav_name)" />
          <arg name="model" value="$(find simulator)/models/urdf/mav_with_camera.gazebo" />
          <arg name="enable_logging" value="$(arg enable_logging)" />
          <arg name="enable_ground_truth" value="$(arg enable_ground_truth)" />
          <arg name="log_file" value="$(arg mav_name)"/>
        </include>
        <node name="mav_nonlinear_mpc" pkg="mav_nonlinear_mpc" type="nonlinear_mpc_node" respawn="true" clear_params="true" output="screen">
            <remap from="odometry" to="odometry_sensor1/odometry" />
            <rosparam file="$(find mav_nonlinear_mpc)/resources/nonlinear_mpc_$(arg mav_name).yaml" />
            <rosparam file="$(find mav_disturbance_observer)/resources/disturbance_observer_$(arg mav_name).yaml"/>
            <param name="use_rc_teleop" value="false"/>
            <param name="verbose" value="false" />
            <param name="reference_frame" value="world"/>
        </node>
        <node name="PID_attitude_controller" pkg="mav_lowlevel_attitude_controller" type="mav_pid_attitude_controller_node" respawn="true" clear_params="true" output="screen">
            <remap from="odometry" to="odometry_sensor1/odometry" />
            <rosparam file="$(find mav_lowlevel_attitude_controller)/resources/PID_attitude_$(arg mav_name).yaml" />
        </node>
        <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
        <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
        <node name="waypoint_publisher" pkg="rotors_gazebo" type="waypoint_publisher" output="screen" args="0 0 1 0 5"/>
        <node pkg="detector_ros" type="detector_ros_node" name="detector_node" output="screen">
            <remap from="/iris/camera_red_iris/image_raw" to="camera_front/image_raw"/>
        </node>
    </group>
    
<<<<<<< HEAD
    <!-- gazebo configs -->
    <arg name="gui" default="true"/>
    <arg name="debug" default="false"/>
    <arg name="verbose" default="false"/>
    <arg name="paused" default="false"/>
    <arg name="respawn_gazebo" default="false"/>


    <env name="GAZEBO_MODEL_PATH" value="${GAZEBO_MODEL_PATH}:$(find simulator)/worlds"/>
    <env name="GAZEBO_RESOURCE_PATH" value="${GAZEBO_RESOURCE_PATH}:$(find simulator)/worlds"/>
    <!-- Gazebo sim -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="gui" value="$(arg gui)"/>
        <arg name="world_name" value="$(arg world)"/>
        <arg name="debug" value="$(arg debug)"/>
        <arg name="verbose" value="$(arg verbose)"/>
        <arg name="paused" value="$(arg paused)"/>
        <arg name="respawn_gazebo" value="$(arg respawn_gazebo)"/>
    </include>
</launch>
=======
</launch>
>>>>>>> 8713d0f379b94fc991ed479e9cc8f9a97caab83f
